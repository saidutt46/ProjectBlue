{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.API_BASE_URL}/user`;\n  }\n  login(model) {\n    return this.http.post(`${this.apiUrl}/login`, model);\n  }\n  registerUser(model) {\n    // const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(`${this.apiUrl}/register`, model, {\n      headers: headers\n    });\n  }\n  getUserProfileById(id) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: headers\n    });\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAS1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,YAAY,OAAO;EAEX;EAEjCC,KAAK,CAACC,KAAqB;IAChC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAqB,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEF,KAAK,CAAC;EAC1E;EAEOG,YAAY,CAACH,KAAwB;IAC1C;IACA,MAAMI,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,OAAO,IAAI,CAACI,IAAI,CAACI,IAAI,CAAmB,GAAG,IAAI,CAACC,MAAM,WAAW,EAAEF,KAAK,EAAE;MAACI,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC/F;EAEOC,kBAAkB,CAACC,EAAU;IAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAML,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUc,KAAK;KACjC,CAAC;IACF,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,IAAII,EAAE,EAAE,EAC3C;MAAEF,OAAO,EAAEA;IAAO,CAAC,CAAC;EACtB;;AAzBWT,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAgB,SAArBhB,qBAAqB;EAAAiB,YAFpB;AAAM","names":["HttpHeaders","environment","AuthenticationService","constructor","http","API_BASE_URL","login","model","post","apiUrl","registerUser","headers","getUserProfileById","id","token","localStorage","getItem","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/dutt/Documents/aspnet projects/aspnet projects/Jalsa_Two/WebAPI/ClientApp/src/app/services/authentication.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginResponseModel, UserLoginModel } from '../models/login.model';\nimport { Observable } from 'rxjs';\nimport { AuthBaseResponse } from '../models/base-response.model';\nimport { UserRegisterModel } from '../models/register.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private apiUrl = `${environment.API_BASE_URL}/user`;\n\n  constructor(private http: HttpClient) { }\n\n  public login(model: UserLoginModel): Observable<LoginResponseModel> {\n    return this.http.post<LoginResponseModel>(`${this.apiUrl}/login`, model);\n  }\n\n  public registerUser(model: UserRegisterModel): Observable<AuthBaseResponse> {\n    // const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post<AuthBaseResponse>(`${this.apiUrl}/register`, model, {headers: headers});\n  }\n\n  public getUserProfileById(id: string) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(`${this.apiUrl}/${id}`,\n    { headers: headers});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}